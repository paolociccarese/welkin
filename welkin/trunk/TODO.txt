
                          +--------------------------------------+
                          |           Welkin ToDo List           |
                          +--------------------------------------+



Todo
====

 - there is very little documentation, but we'll wait until there is a little stability 
   in both the UI and the features before writing some

 - need to find a cool icon/logo for both the window and the mac application


known bugs/limitations
======================

 - the graph distribution widgets should be updated when the graph changes
 
 - there is 'usability degradation' control: welkin will not stop users from loading an
   eccessive amount of information that would make the system too slow to be responsive.
   we must think about ways to prevent this from happening as usability should
   always be good.


in the queue (and in no particular order)
=========================================

 - add provenance info to the graph model (basically, being able to distinguish groups of nodes
   by where they came from)
 
 - allow models to be loaded from a URL (a web-browser-like address bar at the top would be
   handy)
   
 - allow to be used as "seeds" in RDQL/SparQL queries (for example, given a URI, return the result
   of a query such as (?x ?y URI) and (URI ?x ?y), this allows active investigation of the models

 - allow to restrict the graph acting upon the graph distribution widgets, for example, by
   showing only the nodes that belong to a particular range of the distribution. This might
   require some more clever caching of the results in order to act on the graph
   responsively.

 - allow the current model + current layout to be saved for later reuse.
 
 - show facet-like aggregation numbers in the properties and resources menus
 
 - play with clustering algorithms as a way to simplify the graph when it contains too many nodes
   (Newmann-Girman is very promising, but it's algorithmical complexity may be somewhat limiting
   and clearly not realtime, but maybe we can reuse some of the force-repulsion simulation to
   perform the clustering incrementally)

